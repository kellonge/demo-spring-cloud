<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kellonge.demo.spring.cloud.dao.mapper.UserInfoEntityMapper">
  <resultMap id="BaseResultMap" type="com.kellonge.demo.spring.cloud.bean.entities.UserInfoEntity">
    <id column="UserId" jdbcType="BIGINT" property="userId" />
    <result column="DisplayName" jdbcType="VARCHAR" property="displayName" />
    <result column="RealName" jdbcType="VARCHAR" property="realName" />
    <result column="IdentifyNo" jdbcType="VARCHAR" property="identifyNo" />
    <result column="RealNameStatus" jdbcType="INTEGER" property="realNameStatus" />
    <result column="RealNameTime" jdbcType="TIMESTAMP" property="realNameTime" />
    <result column="Mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="FaceImg" jdbcType="VARCHAR" property="faceImg" />
    <result column="CreateTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="LastModifyTime" jdbcType="TIMESTAMP" property="lastModifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  <choose>
                    <when test="criterion.isBinary">
                      and ${criterion.condition} unhex(#{criterion.value})
                    </when>
                    <otherwise>
                      and ${criterion.condition} #{criterion.value}
                    </otherwise>
                  </choose>
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    <choose>
                      <when test="criterion.isBinary">
                        unhex(#{listItem})
                      </when>
                      <otherwise>
                        #{listItem}
                      </otherwise>
                    </choose>
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  <choose>
                    <when test="criterion.isBinary">
                      and ${criterion.condition} unhex(#{criterion.value})
                    </when>
                    <otherwise>
                      and ${criterion.condition} #{criterion.value}
                    </otherwise>
                  </choose>
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    <choose>
                      <when test="criterion.isBinary">
                        unhex(#{listItem})
                      </when>
                      <otherwise>
                        #{listItem}
                      </otherwise>
                    </choose>
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    UserId, DisplayName, RealName, IdentifyNo, RealNameStatus, RealNameTime, Mobile, 
    FaceImg, CreateTime, LastModifyTime
  </sql>
  <select id="selectByExample" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_User_Info
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example.size != null">
      limit
      <if test="example.offset != null">
        #{example.offset},
      </if>
      #{example.size}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from T_User_Info
    where UserId = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from T_User_Info
    where UserId = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="map">
    delete from T_User_Info
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="map">
    insert into T_User_Info (UserId, DisplayName, 
      RealName, IdentifyNo, RealNameStatus, 
      RealNameTime, Mobile, FaceImg, 
      CreateTime, LastModifyTime
      )
    values (#{record.userId,jdbcType=BIGINT}, #{record.displayName,jdbcType=VARCHAR}, 
      #{record.realName,jdbcType=VARCHAR}, #{record.identifyNo,jdbcType=VARCHAR}, #{record.realNameStatus,jdbcType=INTEGER}, 
      #{record.realNameTime,jdbcType=TIMESTAMP}, #{record.mobile,jdbcType=VARCHAR}, #{record.faceImg,jdbcType=VARCHAR}, 
      #{record.createTime,jdbcType=TIMESTAMP}, #{record.lastModifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into T_User_Info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="record.userId != null">
        UserId,
      </if>
      <if test="record.displayName != null">
        DisplayName,
      </if>
      <if test="record.realName != null">
        RealName,
      </if>
      <if test="record.identifyNo != null">
        IdentifyNo,
      </if>
      <if test="record.realNameStatus != null">
        RealNameStatus,
      </if>
      <if test="record.realNameTime != null">
        RealNameTime,
      </if>
      <if test="record.mobile != null">
        Mobile,
      </if>
      <if test="record.faceImg != null">
        FaceImg,
      </if>
      <if test="record.createTime != null">
        CreateTime,
      </if>
      <if test="record.lastModifyTime != null">
        LastModifyTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="record.userId != null">
        #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.displayName != null">
        #{record.displayName,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.identifyNo != null">
        #{record.identifyNo,jdbcType=VARCHAR},
      </if>
      <if test="record.realNameStatus != null">
        #{record.realNameStatus,jdbcType=INTEGER},
      </if>
      <if test="record.realNameTime != null">
        #{record.realNameTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mobile != null">
        #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.faceImg != null">
        #{record.faceImg,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyTime != null">
        #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="map" resultType="java.lang.Integer">
    select count(*) from T_User_Info
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update T_User_Info
    <set>
      <if test="record.userId != null">
        UserId = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.displayName != null">
        DisplayName = #{record.displayName,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        RealName = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.identifyNo != null">
        IdentifyNo = #{record.identifyNo,jdbcType=VARCHAR},
      </if>
      <if test="record.realNameStatus != null">
        RealNameStatus = #{record.realNameStatus,jdbcType=INTEGER},
      </if>
      <if test="record.realNameTime != null">
        RealNameTime = #{record.realNameTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mobile != null">
        Mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.faceImg != null">
        FaceImg = #{record.faceImg,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyTime != null">
        LastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update T_User_Info
    set UserId = #{record.userId,jdbcType=BIGINT},
      DisplayName = #{record.displayName,jdbcType=VARCHAR},
      RealName = #{record.realName,jdbcType=VARCHAR},
      IdentifyNo = #{record.identifyNo,jdbcType=VARCHAR},
      RealNameStatus = #{record.realNameStatus,jdbcType=INTEGER},
      RealNameTime = #{record.realNameTime,jdbcType=TIMESTAMP},
      Mobile = #{record.mobile,jdbcType=VARCHAR},
      FaceImg = #{record.faceImg,jdbcType=VARCHAR},
      CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      LastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update T_User_Info
    <set>
      <if test="record.displayName != null">
        DisplayName = #{record.displayName,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        RealName = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.identifyNo != null">
        IdentifyNo = #{record.identifyNo,jdbcType=VARCHAR},
      </if>
      <if test="record.realNameStatus != null">
        RealNameStatus = #{record.realNameStatus,jdbcType=INTEGER},
      </if>
      <if test="record.realNameTime != null">
        RealNameTime = #{record.realNameTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mobile != null">
        Mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.faceImg != null">
        FaceImg = #{record.faceImg,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyTime != null">
        LastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where UserId = #{record.userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="map">
    update T_User_Info
    set DisplayName = #{record.displayName,jdbcType=VARCHAR},
      RealName = #{record.realName,jdbcType=VARCHAR},
      IdentifyNo = #{record.identifyNo,jdbcType=VARCHAR},
      RealNameStatus = #{record.realNameStatus,jdbcType=INTEGER},
      RealNameTime = #{record.realNameTime,jdbcType=TIMESTAMP},
      Mobile = #{record.mobile,jdbcType=VARCHAR},
      FaceImg = #{record.faceImg,jdbcType=VARCHAR},
      CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      LastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP}
    where UserId = #{record.userId,jdbcType=BIGINT}
  </update>
</mapper>