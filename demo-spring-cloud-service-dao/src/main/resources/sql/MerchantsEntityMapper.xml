<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kellonge.demo.spring.cloud.dao.mapper.MerchantsEntityMapper">
  <resultMap id="BaseResultMap" type="com.kellonge.demo.spring.cloud.bean.entities.MerchantsEntity">
    <id column="MerchantsId" jdbcType="BIGINT" property="merchantsId" />
    <result column="MerchantsName" jdbcType="VARCHAR" property="merchantsName" />
    <result column="MerchantsAlias" jdbcType="VARCHAR" property="merchantsAlias" />
    <result column="MerchantsTel" jdbcType="VARCHAR" property="merchantsTel" />
    <result column="MerchantsClassId" jdbcType="BIGINT" property="merchantsClassId" />
    <result column="MerchantsProvince" jdbcType="VARCHAR" property="merchantsProvince" />
    <result column="MerchantsCity" jdbcType="VARCHAR" property="merchantsCity" />
    <result column="MerchantsAddr" jdbcType="VARCHAR" property="merchantsAddr" />
    <result column="LocationInfo" jdbcType="LONGVARCHAR" property="locationInfo" />
    <result column="LegalPersonName" jdbcType="VARCHAR" property="legalPersonName" />
    <result column="LegalPersonMobile" jdbcType="VARCHAR" property="legalPersonMobile" />
    <result column="ContactName" jdbcType="VARCHAR" property="contactName" />
    <result column="ContactMobile" jdbcType="VARCHAR" property="contactMobile" />
    <result column="IsGuarantee" jdbcType="BIT" property="isGuarantee" />
    <result column="IsFreezed" jdbcType="BIT" property="isFreezed" />
    <result column="FreezedReason" jdbcType="VARCHAR" property="freezedReason" />
    <result column="CustomerManager" jdbcType="BIGINT" property="customerManager" />
    <result column="Status" jdbcType="INTEGER" property="status" />
    <result column="CreateTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="LastModifyTime" jdbcType="TIMESTAMP" property="lastModifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  <choose>
                    <when test="criterion.isBinary">
                      and ${criterion.condition} unhex(#{criterion.value})
                    </when>
                    <otherwise>
                      and ${criterion.condition} #{criterion.value}
                    </otherwise>
                  </choose>
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    <choose>
                      <when test="criterion.isBinary">
                        unhex(#{listItem})
                      </when>
                      <otherwise>
                        #{listItem}
                      </otherwise>
                    </choose>
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  <choose>
                    <when test="criterion.isBinary">
                      and ${criterion.condition} unhex(#{criterion.value})
                    </when>
                    <otherwise>
                      and ${criterion.condition} #{criterion.value}
                    </otherwise>
                  </choose>
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    <choose>
                      <when test="criterion.isBinary">
                        unhex(#{listItem})
                      </when>
                      <otherwise>
                        #{listItem}
                      </otherwise>
                    </choose>
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    MerchantsId, MerchantsName, MerchantsAlias, MerchantsTel, MerchantsClassId, MerchantsProvince, 
    MerchantsCity, MerchantsAddr, LocationInfo, LegalPersonName, LegalPersonMobile, ContactName, 
    ContactMobile, IsGuarantee, IsFreezed, FreezedReason, CustomerManager, Status, CreateTime, 
    LastModifyTime
  </sql>
  <select id="selectByExample" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_Merchants
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example.size != null">
      limit
      <if test="example.offset != null">
        #{example.offset},
      </if>
      #{example.size}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from T_Merchants
    where MerchantsId = #{merchantsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from T_Merchants
    where MerchantsId = #{merchantsId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="map">
    delete from T_Merchants
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="map">
    insert into T_Merchants (MerchantsId, MerchantsName, 
      MerchantsAlias, MerchantsTel, 
      MerchantsClassId, MerchantsProvince, 
      MerchantsCity, MerchantsAddr, 
      LocationInfo, LegalPersonName, 
      LegalPersonMobile, ContactName, 
      ContactMobile, IsGuarantee, IsFreezed, 
      FreezedReason, CustomerManager, 
      Status, CreateTime, LastModifyTime
      )
    values (#{record.merchantsId,jdbcType=BIGINT}, #{record.merchantsName,jdbcType=VARCHAR}, 
      #{record.merchantsAlias,jdbcType=VARCHAR}, #{record.merchantsTel,jdbcType=VARCHAR}, 
      #{record.merchantsClassId,jdbcType=BIGINT}, #{record.merchantsProvince,jdbcType=VARCHAR}, 
      #{record.merchantsCity,jdbcType=VARCHAR}, #{record.merchantsAddr,jdbcType=VARCHAR}, 
      #{record.locationInfo,jdbcType=LONGVARCHAR}, #{record.legalPersonName,jdbcType=VARCHAR}, 
      #{record.legalPersonMobile,jdbcType=VARCHAR}, #{record.contactName,jdbcType=VARCHAR}, 
      #{record.contactMobile,jdbcType=VARCHAR}, #{record.isGuarantee,jdbcType=BIT}, #{record.isFreezed,jdbcType=BIT}, 
      #{record.freezedReason,jdbcType=VARCHAR}, #{record.customerManager,jdbcType=BIGINT}, 
      #{record.status,jdbcType=INTEGER}, #{record.createTime,jdbcType=TIMESTAMP}, #{record.lastModifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into T_Merchants
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="record.merchantsId != null">
        MerchantsId,
      </if>
      <if test="record.merchantsName != null">
        MerchantsName,
      </if>
      <if test="record.merchantsAlias != null">
        MerchantsAlias,
      </if>
      <if test="record.merchantsTel != null">
        MerchantsTel,
      </if>
      <if test="record.merchantsClassId != null">
        MerchantsClassId,
      </if>
      <if test="record.merchantsProvince != null">
        MerchantsProvince,
      </if>
      <if test="record.merchantsCity != null">
        MerchantsCity,
      </if>
      <if test="record.merchantsAddr != null">
        MerchantsAddr,
      </if>
      <if test="record.locationInfo != null">
        LocationInfo,
      </if>
      <if test="record.legalPersonName != null">
        LegalPersonName,
      </if>
      <if test="record.legalPersonMobile != null">
        LegalPersonMobile,
      </if>
      <if test="record.contactName != null">
        ContactName,
      </if>
      <if test="record.contactMobile != null">
        ContactMobile,
      </if>
      <if test="record.isGuarantee != null">
        IsGuarantee,
      </if>
      <if test="record.isFreezed != null">
        IsFreezed,
      </if>
      <if test="record.freezedReason != null">
        FreezedReason,
      </if>
      <if test="record.customerManager != null">
        CustomerManager,
      </if>
      <if test="record.status != null">
        Status,
      </if>
      <if test="record.createTime != null">
        CreateTime,
      </if>
      <if test="record.lastModifyTime != null">
        LastModifyTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="record.merchantsId != null">
        #{record.merchantsId,jdbcType=BIGINT},
      </if>
      <if test="record.merchantsName != null">
        #{record.merchantsName,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantsAlias != null">
        #{record.merchantsAlias,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantsTel != null">
        #{record.merchantsTel,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantsClassId != null">
        #{record.merchantsClassId,jdbcType=BIGINT},
      </if>
      <if test="record.merchantsProvince != null">
        #{record.merchantsProvince,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantsCity != null">
        #{record.merchantsCity,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantsAddr != null">
        #{record.merchantsAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.locationInfo != null">
        #{record.locationInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.legalPersonName != null">
        #{record.legalPersonName,jdbcType=VARCHAR},
      </if>
      <if test="record.legalPersonMobile != null">
        #{record.legalPersonMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.contactName != null">
        #{record.contactName,jdbcType=VARCHAR},
      </if>
      <if test="record.contactMobile != null">
        #{record.contactMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.isGuarantee != null">
        #{record.isGuarantee,jdbcType=BIT},
      </if>
      <if test="record.isFreezed != null">
        #{record.isFreezed,jdbcType=BIT},
      </if>
      <if test="record.freezedReason != null">
        #{record.freezedReason,jdbcType=VARCHAR},
      </if>
      <if test="record.customerManager != null">
        #{record.customerManager,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyTime != null">
        #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="map" resultType="java.lang.Integer">
    select count(*) from T_Merchants
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update T_Merchants
    <set>
      <if test="record.merchantsId != null">
        MerchantsId = #{record.merchantsId,jdbcType=BIGINT},
      </if>
      <if test="record.merchantsName != null">
        MerchantsName = #{record.merchantsName,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantsAlias != null">
        MerchantsAlias = #{record.merchantsAlias,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantsTel != null">
        MerchantsTel = #{record.merchantsTel,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantsClassId != null">
        MerchantsClassId = #{record.merchantsClassId,jdbcType=BIGINT},
      </if>
      <if test="record.merchantsProvince != null">
        MerchantsProvince = #{record.merchantsProvince,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantsCity != null">
        MerchantsCity = #{record.merchantsCity,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantsAddr != null">
        MerchantsAddr = #{record.merchantsAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.locationInfo != null">
        LocationInfo = #{record.locationInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.legalPersonName != null">
        LegalPersonName = #{record.legalPersonName,jdbcType=VARCHAR},
      </if>
      <if test="record.legalPersonMobile != null">
        LegalPersonMobile = #{record.legalPersonMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.contactName != null">
        ContactName = #{record.contactName,jdbcType=VARCHAR},
      </if>
      <if test="record.contactMobile != null">
        ContactMobile = #{record.contactMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.isGuarantee != null">
        IsGuarantee = #{record.isGuarantee,jdbcType=BIT},
      </if>
      <if test="record.isFreezed != null">
        IsFreezed = #{record.isFreezed,jdbcType=BIT},
      </if>
      <if test="record.freezedReason != null">
        FreezedReason = #{record.freezedReason,jdbcType=VARCHAR},
      </if>
      <if test="record.customerManager != null">
        CustomerManager = #{record.customerManager,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        Status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyTime != null">
        LastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update T_Merchants
    set MerchantsId = #{record.merchantsId,jdbcType=BIGINT},
      MerchantsName = #{record.merchantsName,jdbcType=VARCHAR},
      MerchantsAlias = #{record.merchantsAlias,jdbcType=VARCHAR},
      MerchantsTel = #{record.merchantsTel,jdbcType=VARCHAR},
      MerchantsClassId = #{record.merchantsClassId,jdbcType=BIGINT},
      MerchantsProvince = #{record.merchantsProvince,jdbcType=VARCHAR},
      MerchantsCity = #{record.merchantsCity,jdbcType=VARCHAR},
      MerchantsAddr = #{record.merchantsAddr,jdbcType=VARCHAR},
      LocationInfo = #{record.locationInfo,jdbcType=LONGVARCHAR},
      LegalPersonName = #{record.legalPersonName,jdbcType=VARCHAR},
      LegalPersonMobile = #{record.legalPersonMobile,jdbcType=VARCHAR},
      ContactName = #{record.contactName,jdbcType=VARCHAR},
      ContactMobile = #{record.contactMobile,jdbcType=VARCHAR},
      IsGuarantee = #{record.isGuarantee,jdbcType=BIT},
      IsFreezed = #{record.isFreezed,jdbcType=BIT},
      FreezedReason = #{record.freezedReason,jdbcType=VARCHAR},
      CustomerManager = #{record.customerManager,jdbcType=BIGINT},
      Status = #{record.status,jdbcType=INTEGER},
      CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      LastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update T_Merchants
    <set>
      <if test="record.merchantsName != null">
        MerchantsName = #{record.merchantsName,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantsAlias != null">
        MerchantsAlias = #{record.merchantsAlias,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantsTel != null">
        MerchantsTel = #{record.merchantsTel,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantsClassId != null">
        MerchantsClassId = #{record.merchantsClassId,jdbcType=BIGINT},
      </if>
      <if test="record.merchantsProvince != null">
        MerchantsProvince = #{record.merchantsProvince,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantsCity != null">
        MerchantsCity = #{record.merchantsCity,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantsAddr != null">
        MerchantsAddr = #{record.merchantsAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.locationInfo != null">
        LocationInfo = #{record.locationInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.legalPersonName != null">
        LegalPersonName = #{record.legalPersonName,jdbcType=VARCHAR},
      </if>
      <if test="record.legalPersonMobile != null">
        LegalPersonMobile = #{record.legalPersonMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.contactName != null">
        ContactName = #{record.contactName,jdbcType=VARCHAR},
      </if>
      <if test="record.contactMobile != null">
        ContactMobile = #{record.contactMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.isGuarantee != null">
        IsGuarantee = #{record.isGuarantee,jdbcType=BIT},
      </if>
      <if test="record.isFreezed != null">
        IsFreezed = #{record.isFreezed,jdbcType=BIT},
      </if>
      <if test="record.freezedReason != null">
        FreezedReason = #{record.freezedReason,jdbcType=VARCHAR},
      </if>
      <if test="record.customerManager != null">
        CustomerManager = #{record.customerManager,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        Status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyTime != null">
        LastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where MerchantsId = #{record.merchantsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="map">
    update T_Merchants
    set MerchantsName = #{record.merchantsName,jdbcType=VARCHAR},
      MerchantsAlias = #{record.merchantsAlias,jdbcType=VARCHAR},
      MerchantsTel = #{record.merchantsTel,jdbcType=VARCHAR},
      MerchantsClassId = #{record.merchantsClassId,jdbcType=BIGINT},
      MerchantsProvince = #{record.merchantsProvince,jdbcType=VARCHAR},
      MerchantsCity = #{record.merchantsCity,jdbcType=VARCHAR},
      MerchantsAddr = #{record.merchantsAddr,jdbcType=VARCHAR},
      LocationInfo = #{record.locationInfo,jdbcType=LONGVARCHAR},
      LegalPersonName = #{record.legalPersonName,jdbcType=VARCHAR},
      LegalPersonMobile = #{record.legalPersonMobile,jdbcType=VARCHAR},
      ContactName = #{record.contactName,jdbcType=VARCHAR},
      ContactMobile = #{record.contactMobile,jdbcType=VARCHAR},
      IsGuarantee = #{record.isGuarantee,jdbcType=BIT},
      IsFreezed = #{record.isFreezed,jdbcType=BIT},
      FreezedReason = #{record.freezedReason,jdbcType=VARCHAR},
      CustomerManager = #{record.customerManager,jdbcType=BIGINT},
      Status = #{record.status,jdbcType=INTEGER},
      CreateTime = #{record.createTime,jdbcType=TIMESTAMP},
      LastModifyTime = #{record.lastModifyTime,jdbcType=TIMESTAMP}
    where MerchantsId = #{record.merchantsId,jdbcType=BIGINT}
  </update>
</mapper>